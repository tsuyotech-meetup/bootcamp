import{_ as u,c as r,e as p,b as n,a as t,t as d,d as a,w as l,r as c,o as k}from"./app-BnP3mkOd.js";const v={},m={id:"page-frontmatter-title",tabindex:"-1"},b={class:"header-anchor",href:"#page-frontmatter-title"};function g(i,s){const o=c("header-table"),e=c("RouteLink");return k(),r("div",null,[p(o),n("h1",m,[n("a",b,[n("span",null,d(i.$page.frontmatter.title),1)])]),s[5]||(s[5]=t('<h2 id="学習目標" tabindex="-1"><a class="header-anchor" href="#学習目標"><span>学習目標</span></a></h2><p>この章を完了すると、以下のことができるようになります：</p><ul><li><strong>Docker Composeの基本構文を理解</strong>し、複数コンテナを連携できる</li><li><strong>ネットワークとボリューム</strong>を使った永続化とサービス間通信を実装できる</li><li><strong>実用的な開発環境</strong>を Docker Compose で構築できる</li><li><strong>ヘルスチェック</strong>による確実な起動順序制御を適用できる</li></ul><h2 id="事前準備" tabindex="-1"><a class="header-anchor" href="#事前準備"><span>事前準備</span></a></h2><h3 id="前提条件" tabindex="-1"><a class="header-anchor" href="#前提条件"><span>前提条件</span></a></h3>',5)),n("ul",null,[n("li",null,[p(e,{to:"/dev/container/01_dockerfile_basic.html"},{default:l(()=>s[0]||(s[0]=[a("第1部: Dockerfile基礎編")])),_:1}),s[1]||(s[1]=a("を完了していること"))]),s[2]||(s[2]=n("li",null,"前章で作成した Flask アプリケーションが利用可能であること",-1))]),s[6]||(s[6]=t(`<h3 id="作業ディレクトリの準備" tabindex="-1"><a class="header-anchor" href="#作業ディレクトリの準備"><span>作業ディレクトリの準備</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token builtin class-name">cd</span> docker-handson</span>
<span class="line"><span class="token function">mkdir</span> 02-compose</span>
<span class="line"><span class="token builtin class-name">cd</span> 02-compose</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="docker-composeとは" tabindex="-1"><a class="header-anchor" href="#docker-composeとは"><span>Docker Composeとは</span></a></h2><p><strong>Docker Compose</strong>は、複数のDockerコンテナを定義・実行するためのツールです。YAMLファイルでサービス構成を記述し、一つのコマンドで複数のコンテナを起動・停止できます。</p><h3 id="docker-composeの利点" tabindex="-1"><a class="header-anchor" href="#docker-composeの利点"><span>Docker Composeの利点</span></a></h3><table><thead><tr><th>利点</th><th>説明</th></tr></thead><tbody><tr><td><strong>簡単な構成管理</strong></td><td>YAMLファイルで全サービスを一元管理</td></tr><tr><td><strong>サービス間通信</strong></td><td>自動的なネットワーク作成と名前解決</td></tr><tr><td><strong>データ永続化</strong></td><td>ボリュームによるデータ保持</td></tr><tr><td><strong>環境の再現性</strong></td><td>開発・テスト・本番環境の統一</td></tr><tr><td><strong>スケーラビリティ</strong></td><td>サービスの複製と負荷分散</td></tr></tbody></table><h3 id="基本的なcompose命令" tabindex="-1"><a class="header-anchor" href="#基本的なcompose命令"><span>基本的なCompose命令</span></a></h3><table><thead><tr><th>命令</th><th>説明</th><th>例</th></tr></thead><tbody><tr><td><code>docker compose up</code></td><td>サービスを起動</td><td><code>docker compose up -d</code></td></tr><tr><td><code>docker compose down</code></td><td>サービスを停止・削除</td><td><code>docker compose down</code></td></tr><tr><td><code>docker compose logs</code></td><td>ログを表示</td><td><code>docker compose logs app</code></td></tr><tr><td><code>docker compose ps</code></td><td>実行中のサービスを表示</td><td><code>docker compose ps</code></td></tr><tr><td><code>docker compose exec</code></td><td>コンテナ内でコマンド実行</td><td><code>docker compose exec app bash</code></td></tr></tbody></table><h2 id="ハンズオン1-最初のcompose-flask-nginx" tabindex="-1"><a class="header-anchor" href="#ハンズオン1-最初のcompose-flask-nginx"><span>ハンズオン1: 最初のCompose - Flask + NGINX</span></a></h2><h3 id="目標" tabindex="-1"><a class="header-anchor" href="#目標"><span>🎯 目標</span></a></h3><p>前章で作成したFlaskアプリケーションにNGINXを追加し、リバースプロキシ構成を作成します。</p><h3 id="実装" tabindex="-1"><a class="header-anchor" href="#実装"><span>📝 実装</span></a></h3><p><strong>1. プロジェクト構成の準備</strong></p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token function">mkdir</span> hands-on1</span>
<span class="line"><span class="token builtin class-name">cd</span> hands-on1</span>
<span class="line"><span class="token function">mkdir</span> nginx</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>ディレクトリ構成</strong></p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line">hands-on1/</span>
<span class="line">├── compose.yml</span>
<span class="line">└── nginx/</span>
<span class="line">    └── nginx.conf</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>2. 前章のFlaskアプリを確認</strong></p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token comment"># 前章で作成したイメージを確認</span></span>
<span class="line"><span class="token function">docker</span> images <span class="token operator">|</span> <span class="token function">grep</span> flask-app</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 利用可能なイメージ例：</span></span>
<span class="line"><span class="token comment"># flask-app-distroless</span></span>
<span class="line"><span class="token comment"># flask-app-after</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>3. NGINXの設定ファイルを作成</strong></p><div class="language-nginx line-numbers-mode" data-highlighter="prismjs" data-ext="nginx"><pre><code><span class="line"><span class="token comment"># nginx/nginx.conf</span></span>
<span class="line"><span class="token directive"><span class="token keyword">events</span></span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token directive"><span class="token keyword">worker_connections</span> <span class="token number">1024</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token directive"><span class="token keyword">http</span></span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token directive"><span class="token keyword">upstream</span> flask_app</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token directive"><span class="token keyword">server</span> app:5000</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    </span>
<span class="line">    <span class="token directive"><span class="token keyword">server</span></span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token directive"><span class="token keyword">listen</span> <span class="token number">80</span></span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token directive"><span class="token keyword">server_name</span> localhost</span><span class="token punctuation">;</span></span>
<span class="line">        </span>
<span class="line">        <span class="token comment"># アクセスログ</span></span>
<span class="line">        <span class="token directive"><span class="token keyword">access_log</span> /var/log/nginx/access.log</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token directive"><span class="token keyword">error_log</span> /var/log/nginx/error.log</span><span class="token punctuation">;</span></span>
<span class="line">        </span>
<span class="line">        <span class="token comment"># Flask アプリケーションへのプロキシ</span></span>
<span class="line">        <span class="token directive"><span class="token keyword">location</span> /</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token directive"><span class="token keyword">proxy_pass</span> http://flask_app</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token directive"><span class="token keyword">proxy_set_header</span> Host <span class="token variable">$host</span></span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token directive"><span class="token keyword">proxy_set_header</span> X-Real-IP <span class="token variable">$remote_addr</span></span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token directive"><span class="token keyword">proxy_set_header</span> X-Forwarded-For <span class="token variable">$proxy_add_x_forwarded_for</span></span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token directive"><span class="token keyword">proxy_set_header</span> X-Forwarded-Proto <span class="token variable">$scheme</span></span><span class="token punctuation">;</span></span>
<span class="line">            </span>
<span class="line">            <span class="token comment"># タイムアウト設定</span></span>
<span class="line">            <span class="token directive"><span class="token keyword">proxy_connect_timeout</span> <span class="token number">60s</span></span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token directive"><span class="token keyword">proxy_send_timeout</span> <span class="token number">60s</span></span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token directive"><span class="token keyword">proxy_read_timeout</span> <span class="token number">60s</span></span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        </span>
<span class="line">        <span class="token comment"># ヘルスチェック用エンドポイント</span></span>
<span class="line">        <span class="token directive"><span class="token keyword">location</span> /nginx-health</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token directive"><span class="token keyword">access_log</span> <span class="token boolean">off</span></span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token directive"><span class="token keyword">return</span> <span class="token number">200</span> <span class="token string">&quot;healthy<span class="token escape entity">\\n</span>&quot;</span></span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token directive"><span class="token keyword">add_header</span> Content-Type text/plain</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>4. 最初のcompose.ymlを作成</strong></p><div class="language-yaml line-numbers-mode" data-highlighter="prismjs" data-ext="yml"><pre><code><span class="line"><span class="token comment"># compose.yml</span></span>
<span class="line"><span class="token key atrule">services</span><span class="token punctuation">:</span></span>
<span class="line">  <span class="token key atrule">app</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token key atrule">image</span><span class="token punctuation">:</span> flask<span class="token punctuation">-</span>app<span class="token punctuation">-</span>distroless</span>
<span class="line">    <span class="token key atrule">restart</span><span class="token punctuation">:</span> unless<span class="token punctuation">-</span>stopped</span>
<span class="line">    <span class="token key atrule">networks</span><span class="token punctuation">:</span></span>
<span class="line">      <span class="token punctuation">-</span> app<span class="token punctuation">-</span>network</span>
<span class="line"></span>
<span class="line">  <span class="token key atrule">nginx</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token key atrule">image</span><span class="token punctuation">:</span> nginx<span class="token punctuation">:</span>alpine</span>
<span class="line">    <span class="token key atrule">restart</span><span class="token punctuation">:</span> unless<span class="token punctuation">-</span>stopped</span>
<span class="line">    <span class="token key atrule">ports</span><span class="token punctuation">:</span></span>
<span class="line">      <span class="token punctuation">-</span> <span class="token string">&quot;8080:80&quot;</span></span>
<span class="line">    <span class="token key atrule">volumes</span><span class="token punctuation">:</span></span>
<span class="line">      <span class="token punctuation">-</span> ./nginx/nginx.conf<span class="token punctuation">:</span>/etc/nginx/nginx.conf<span class="token punctuation">:</span>ro</span>
<span class="line">    <span class="token key atrule">depends_on</span><span class="token punctuation">:</span></span>
<span class="line">      <span class="token punctuation">-</span> app</span>
<span class="line">    <span class="token key atrule">networks</span><span class="token punctuation">:</span></span>
<span class="line">      <span class="token punctuation">-</span> app<span class="token punctuation">-</span>network</span>
<span class="line">    <span class="token key atrule">environment</span><span class="token punctuation">:</span></span>
<span class="line">      <span class="token punctuation">-</span> TZ=Asia/Tokyo</span>
<span class="line"></span>
<span class="line"><span class="token key atrule">networks</span><span class="token punctuation">:</span></span>
<span class="line">  <span class="token key atrule">app-network</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token key atrule">driver</span><span class="token punctuation">:</span> bridge</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>5. サービスを起動</strong></p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token comment"># バックグラウンドで起動</span></span>
<span class="line"><span class="token function">docker</span> compose up <span class="token parameter variable">-d</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 起動状況を確認</span></span>
<span class="line"><span class="token function">docker</span> compose <span class="token function">ps</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># ログを確認</span></span>
<span class="line"><span class="token function">docker</span> compose logs <span class="token parameter variable">-f</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="動作確認" tabindex="-1"><a class="header-anchor" href="#動作確認"><span>✅ 動作確認</span></a></h3><p><strong>1. Webアクセス確認</strong></p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token comment"># ブラウザまたはcurlでアクセス</span></span>
<span class="line"><span class="token function">curl</span> http://localhost:8080/</span>
<span class="line"></span>
<span class="line"><span class="token comment"># NGINXのヘルスチェック</span></span>
<span class="line"><span class="token function">curl</span> http://localhost:8080/nginx-health</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>2. サービス間通信の確認</strong></p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token comment"># NGINXからFlaskへの接続テスト</span></span>
<span class="line"><span class="token function">docker</span> compose <span class="token builtin class-name">exec</span> nginx <span class="token function">ping</span> app</span>
<span class="line"></span>
<span class="line"><span class="token comment"># NGINXコンテナ内からFlaskにアクセス</span></span>
<span class="line"><span class="token function">docker</span> compose <span class="token builtin class-name">exec</span> nginx <span class="token function">curl</span> http://app:5000/</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>3. ログの確認</strong></p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token comment"># NGINXのアクセスログ</span></span>
<span class="line"><span class="token function">docker</span> compose logs nginx <span class="token parameter variable">-n</span> <span class="token number">20</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># Flaskアプリのログ</span></span>
<span class="line"><span class="token function">docker</span> compose logs <span class="token parameter variable">-f</span> app</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="解説" tabindex="-1"><a class="header-anchor" href="#解説"><span>💡 解説</span></a></h3><p><strong>重要な概念:</strong></p><ul><li><strong>networks</strong>: <code>app-network</code>でコンテナ間通信を実現</li><li><strong>depends_on</strong>: NGINXがFlaskより後に起動するよう制御</li><li><strong>volumes</strong>: NGINX設定ファイルをコンテナにマウント</li><li><strong>サービス名による名前解決</strong>: <code>app:5000</code>でFlaskコンテナにアクセス可能</li></ul><p><strong>リバースプロキシの利点:</strong></p><ul><li>フロントエンドとバックエンドの分離</li><li>静的ファイル配信の高速化</li><li>SSL終端やロードバランシングの一元化</li></ul><h2 id="ハンズオン2-flask-mysql-データ永続化とヘルスチェック" tabindex="-1"><a class="header-anchor" href="#ハンズオン2-flask-mysql-データ永続化とヘルスチェック"><span>ハンズオン2: Flask + MySQL - データ永続化とヘルスチェック</span></a></h2><h3 id="目標-1" tabindex="-1"><a class="header-anchor" href="#目標-1"><span>🎯 目標</span></a></h3><ul><li>データベースとの連携でデータ永続化を実現</li><li>ヘルスチェックによる確実なサービス起動順序制御</li><li>実用的なWebアプリケーションの完成</li></ul><h3 id="実装-1" tabindex="-1"><a class="header-anchor" href="#実装-1"><span>📝 実装</span></a></h3><p><strong>1. プロジェクト構成</strong></p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token builtin class-name">cd</span> <span class="token punctuation">..</span>/</span>
<span class="line"><span class="token function">mkdir</span> hands-on2</span>
<span class="line"><span class="token builtin class-name">cd</span> hands-on2</span>
<span class="line"><span class="token function">mkdir</span> <span class="token parameter variable">-p</span> app/templates mysql</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>ディレクトリ構成</strong></p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line">hands-on2/</span>
<span class="line">├── compose.yml</span>
<span class="line">├── Dockerfile</span>
<span class="line">├── app/</span>
<span class="line">│   ├── templates/</span>
<span class="line">│   │   └── index.html</span>
<span class="line">│   ├── main.py</span>
<span class="line">│   └── requirements.txt</span>
<span class="line">└── mysql/</span>
<span class="line">    └── init.sql</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>2. データベース対応のFlaskアプリ</strong></p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line"><span class="token keyword">from</span> flask <span class="token keyword">import</span> Flask<span class="token punctuation">,</span> request<span class="token punctuation">,</span> jsonify<span class="token punctuation">,</span> render_template</span>
<span class="line"><span class="token keyword">import</span> mysql<span class="token punctuation">.</span>connector</span>
<span class="line"><span class="token keyword">import</span> os</span>
<span class="line"><span class="token keyword">from</span> datetime <span class="token keyword">import</span> datetime</span>
<span class="line"></span>
<span class="line">app <span class="token operator">=</span> Flask<span class="token punctuation">(</span>__name__<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># データベース設定</span></span>
<span class="line">DB_CONFIG <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token string">&#39;host&#39;</span><span class="token punctuation">:</span> os<span class="token punctuation">.</span>environ<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&#39;DB_HOST&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;db&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token string">&#39;database&#39;</span><span class="token punctuation">:</span> os<span class="token punctuation">.</span>environ<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&#39;DB_NAME&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;flask_app&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token string">&#39;user&#39;</span><span class="token punctuation">:</span> os<span class="token punctuation">.</span>environ<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&#39;DB_USER&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;flask_user&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token string">&#39;password&#39;</span><span class="token punctuation">:</span> os<span class="token punctuation">.</span>environ<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&#39;DB_PASSWORD&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;flask_password&#39;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">def</span> <span class="token function">get_db_connection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">try</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token keyword">return</span> mysql<span class="token punctuation">.</span>connector<span class="token punctuation">.</span>connect<span class="token punctuation">(</span><span class="token operator">**</span>DB_CONFIG<span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">except</span> mysql<span class="token punctuation">.</span>connector<span class="token punctuation">.</span>Error <span class="token keyword">as</span> err<span class="token punctuation">:</span></span>
<span class="line">        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;Database connection error: </span><span class="token interpolation"><span class="token punctuation">{</span>err<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token boolean">None</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">&#39;/&#39;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">def</span> <span class="token function">home</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    conn <span class="token operator">=</span> get_db_connection<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">if</span> conn<span class="token punctuation">:</span></span>
<span class="line">        cursor <span class="token operator">=</span> conn<span class="token punctuation">.</span>cursor<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">        </span>
<span class="line">        <span class="token comment"># 訪問記録を保存</span></span>
<span class="line">        cursor<span class="token punctuation">.</span>execute<span class="token punctuation">(</span></span>
<span class="line">            <span class="token string">&quot;INSERT INTO visits (ip_address, timestamp, user_agent) VALUES (%s, %s, %s)&quot;</span><span class="token punctuation">,</span></span>
<span class="line">            <span class="token punctuation">(</span>request<span class="token punctuation">.</span>remote_addr<span class="token punctuation">,</span> datetime<span class="token punctuation">.</span>now<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> request<span class="token punctuation">.</span>headers<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&#39;User-Agent&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">)</span></span>
<span class="line">        conn<span class="token punctuation">.</span>commit<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">        </span>
<span class="line">        <span class="token comment"># 総訪問数を取得</span></span>
<span class="line">        cursor<span class="token punctuation">.</span>execute<span class="token punctuation">(</span><span class="token string">&quot;SELECT COUNT(*) FROM visits&quot;</span><span class="token punctuation">)</span></span>
<span class="line">        visit_count <span class="token operator">=</span> cursor<span class="token punctuation">.</span>fetchone<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span></span>
<span class="line">        </span>
<span class="line">        <span class="token comment"># 最近の訪問履歴を取得</span></span>
<span class="line">        cursor<span class="token punctuation">.</span>execute<span class="token punctuation">(</span><span class="token string">&quot;SELECT ip_address, timestamp FROM visits ORDER BY timestamp DESC LIMIT 10&quot;</span><span class="token punctuation">)</span></span>
<span class="line">        recent_visits <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token string">&#39;ip_address&#39;</span><span class="token punctuation">:</span> row<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">&#39;timestamp&#39;</span><span class="token punctuation">:</span> row<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">}</span> <span class="token keyword">for</span> row <span class="token keyword">in</span> cursor<span class="token punctuation">.</span>fetchall<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span></span>
<span class="line">        </span>
<span class="line">        cursor<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">        conn<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">        </span>
<span class="line">        <span class="token keyword">return</span> render_template<span class="token punctuation">(</span><span class="token string">&#39;index.html&#39;</span><span class="token punctuation">,</span></span>
<span class="line">                                visit_count<span class="token operator">=</span>visit_count<span class="token punctuation">,</span></span>
<span class="line">                                database_status<span class="token operator">=</span><span class="token string">&#39;connected&#39;</span><span class="token punctuation">,</span></span>
<span class="line">                                current_time<span class="token operator">=</span>datetime<span class="token punctuation">.</span>now<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>strftime<span class="token punctuation">(</span><span class="token string">&#39;%Y-%m-%d %H:%M:%S&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">                                recent_visits<span class="token operator">=</span>recent_visits<span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">else</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token string">&#39;error&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;Database connection failed&#39;</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">500</span></span>
<span class="line"></span>
<span class="line"><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">&#39;/api/visits&#39;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">def</span> <span class="token function">api_visits</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    conn <span class="token operator">=</span> get_db_connection<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">if</span> conn<span class="token punctuation">:</span></span>
<span class="line">        cursor <span class="token operator">=</span> conn<span class="token punctuation">.</span>cursor<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">        cursor<span class="token punctuation">.</span>execute<span class="token punctuation">(</span><span class="token string">&quot;SELECT ip_address, timestamp, user_agent FROM visits ORDER BY timestamp DESC LIMIT 50&quot;</span><span class="token punctuation">)</span></span>
<span class="line">        visits <span class="token operator">=</span> <span class="token punctuation">[</span></span>
<span class="line">            <span class="token punctuation">{</span></span>
<span class="line">                <span class="token string">&#39;ip_address&#39;</span><span class="token punctuation">:</span> row<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">                <span class="token string">&#39;timestamp&#39;</span><span class="token punctuation">:</span> row<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>isoformat<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">                <span class="token string">&#39;user_agent&#39;</span><span class="token punctuation">:</span> row<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">            <span class="token keyword">for</span> row <span class="token keyword">in</span> cursor<span class="token punctuation">.</span>fetchall<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">]</span></span>
<span class="line">        cursor<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">        conn<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token keyword">return</span> jsonify<span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">&#39;visits&#39;</span><span class="token punctuation">:</span> visits<span class="token punctuation">,</span> <span class="token string">&#39;count&#39;</span><span class="token punctuation">:</span> <span class="token builtin">len</span><span class="token punctuation">(</span>visits<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">return</span> jsonify<span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">&#39;error&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;Database connection failed&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">500</span></span>
<span class="line"></span>
<span class="line"><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">&#39;/health&#39;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">def</span> <span class="token function">health</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token comment"># データベース接続をテスト</span></span>
<span class="line">    conn <span class="token operator">=</span> get_db_connection<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">if</span> conn<span class="token punctuation">:</span></span>
<span class="line">        conn<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token keyword">return</span> jsonify<span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">&#39;status&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;healthy&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;database&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;connected&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">200</span></span>
<span class="line">    <span class="token keyword">return</span> jsonify<span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">&#39;status&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;unhealthy&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;database&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;disconnected&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">500</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&#39;__main__&#39;</span><span class="token punctuation">:</span></span>
<span class="line">    app<span class="token punctuation">.</span>run<span class="token punctuation">(</span>host<span class="token operator">=</span><span class="token string">&#39;0.0.0.0&#39;</span><span class="token punctuation">,</span> port<span class="token operator">=</span><span class="token number">5000</span><span class="token punctuation">,</span> debug<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>3. 依存関係ファイルを作成</strong></p><div class="language-txt line-numbers-mode" data-highlighter="prismjs" data-ext="txt"><pre><code><span class="line"># app/requirements.txt</span>
<span class="line">flask==3.1.1</span>
<span class="line">mysql-connector-python==9.3.0</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>4. HTMLテンプレートを作成</strong></p><div class="language-html line-numbers-mode" data-highlighter="prismjs" data-ext="html"><pre><code><span class="line"><span class="token comment">&lt;!-- app/templates/index.html --&gt;</span></span>
<span class="line"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ja<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>UTF-8<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>Flask + MySQL アプリ<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css"></span>
<span class="line">        <span class="token selector">body</span> <span class="token punctuation">{</span> <span class="token property">font-family</span><span class="token punctuation">:</span> Arial<span class="token punctuation">,</span> sans-serif<span class="token punctuation">;</span> <span class="token property">margin</span><span class="token punctuation">:</span> 40px<span class="token punctuation">;</span> <span class="token property">background</span><span class="token punctuation">:</span> #f5f5f5<span class="token punctuation">;</span> <span class="token punctuation">}</span></span>
<span class="line">        <span class="token selector">.container</span> <span class="token punctuation">{</span> <span class="token property">max-width</span><span class="token punctuation">:</span> 800px<span class="token punctuation">;</span> <span class="token property">margin</span><span class="token punctuation">:</span> 0 auto<span class="token punctuation">;</span> <span class="token property">background</span><span class="token punctuation">:</span> white<span class="token punctuation">;</span> <span class="token property">padding</span><span class="token punctuation">:</span> 30px<span class="token punctuation">;</span> <span class="token property">border-radius</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span> <span class="token property">box-shadow</span><span class="token punctuation">:</span> 0 2px 10px <span class="token function">rgba</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span>0<span class="token punctuation">,</span>0<span class="token punctuation">,</span>0.1<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span></span>
<span class="line">        <span class="token selector">.header</span> <span class="token punctuation">{</span> <span class="token property">color</span><span class="token punctuation">:</span> #2196F3<span class="token punctuation">;</span> <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span> <span class="token property">margin-bottom</span><span class="token punctuation">:</span> 30px<span class="token punctuation">;</span> <span class="token punctuation">}</span></span>
<span class="line">        <span class="token selector">.stats</span> <span class="token punctuation">{</span> <span class="token property">background</span><span class="token punctuation">:</span> #e3f2fd<span class="token punctuation">;</span> <span class="token property">padding</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span> <span class="token property">border-radius</span><span class="token punctuation">:</span> 5px<span class="token punctuation">;</span> <span class="token property">margin</span><span class="token punctuation">:</span> 20px 0<span class="token punctuation">;</span> <span class="token punctuation">}</span></span>
<span class="line">        <span class="token selector">.visits</span> <span class="token punctuation">{</span> <span class="token property">background</span><span class="token punctuation">:</span> #f3e5f5<span class="token punctuation">;</span> <span class="token property">padding</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span> <span class="token property">border-radius</span><span class="token punctuation">:</span> 5px<span class="token punctuation">;</span> <span class="token property">margin</span><span class="token punctuation">:</span> 20px 0<span class="token punctuation">;</span> <span class="token punctuation">}</span></span>
<span class="line">        <span class="token selector">.visit-item</span> <span class="token punctuation">{</span> <span class="token property">border-bottom</span><span class="token punctuation">:</span> 1px solid #ddd<span class="token punctuation">;</span> <span class="token property">padding</span><span class="token punctuation">:</span> 10px 0<span class="token punctuation">;</span> <span class="token punctuation">}</span></span>
<span class="line">        <span class="token selector">.api-links</span> <span class="token punctuation">{</span> <span class="token property">margin</span><span class="token punctuation">:</span> 20px 0<span class="token punctuation">;</span> <span class="token punctuation">}</span></span>
<span class="line">        <span class="token selector">.api-links a</span> <span class="token punctuation">{</span> <span class="token property">margin-right</span><span class="token punctuation">:</span> 15px<span class="token punctuation">;</span> <span class="token property">color</span><span class="token punctuation">:</span> #1976d2<span class="token punctuation">;</span> <span class="token property">text-decoration</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span> <span class="token punctuation">}</span></span>
<span class="line">        <span class="token selector">.api-links a:hover</span> <span class="token punctuation">{</span> <span class="token property">text-decoration</span><span class="token punctuation">:</span> underline<span class="token punctuation">;</span> <span class="token punctuation">}</span></span>
<span class="line">    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>container<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>header<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>🐳 Flask + MySQL アプリケーション<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">        </span>
<span class="line">        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>stats<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">&gt;</span></span>アクセス統計<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>strong</span><span class="token punctuation">&gt;</span></span>総訪問数:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>strong</span><span class="token punctuation">&gt;</span></span> {{ visit_count }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>strong</span><span class="token punctuation">&gt;</span></span>データベース状態:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>strong</span><span class="token punctuation">&gt;</span></span> {{ database_status }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>strong</span><span class="token punctuation">&gt;</span></span>現在時刻:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>strong</span><span class="token punctuation">&gt;</span></span> {{ current_time }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">        </span>
<span class="line">        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>visits<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">&gt;</span></span>最近の訪問履歴<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">            {% for visit in recent_visits %}</span>
<span class="line">            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>visit-item<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>strong</span><span class="token punctuation">&gt;</span></span>{{ visit.timestamp }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>strong</span><span class="token punctuation">&gt;</span></span> - {{ visit.ip_address }}</span>
<span class="line">            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">            {% endfor %}</span>
<span class="line">        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">        </span>
<span class="line">        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>api-links<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">&gt;</span></span>API エンドポイント<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/api/visits<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>GET /api/visits<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/health<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>GET /health<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/nginx-health<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>GET /nginx-health<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>5. Dockerfileを作成</strong></p><div class="language-docker line-numbers-mode" data-highlighter="prismjs" data-ext="docker"><pre><code><span class="line"><span class="token comment"># Dockerfile</span></span>
<span class="line"><span class="token instruction"><span class="token keyword">FROM</span> python:3.13-slim</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 作業ディレクトリを設定</span></span>
<span class="line"><span class="token instruction"><span class="token keyword">WORKDIR</span> /app</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 依存関係をインストールするためのファイルをコピー</span></span>
<span class="line"><span class="token instruction"><span class="token keyword">COPY</span> app/requirements.txt .</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 必要なパッケージとPythonライブラリをインストール</span></span>
<span class="line"><span class="token instruction"><span class="token keyword">RUN</span> apt-get update &amp;&amp; <span class="token operator">\\</span></span>
<span class="line">    apt-get install -y --no-install-recommends curl &amp;&amp; <span class="token operator">\\</span></span>
<span class="line">    pip install --no-cache-dir -r requirements.txt &amp;&amp; <span class="token operator">\\</span></span>
<span class="line">    apt-get clean &amp;&amp; <span class="token operator">\\</span></span>
<span class="line">    rm -rf /var/lib/apt/lists/*</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># アプリケーションファイルをコピー</span></span>
<span class="line"><span class="token instruction"><span class="token keyword">COPY</span> app/ .</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># セキュリティ：非rootユーザーを作成</span></span>
<span class="line"><span class="token instruction"><span class="token keyword">RUN</span> adduser --disabled-password --no-create-home appuser &amp;&amp; <span class="token operator">\\</span></span>
<span class="line">    chown -R appuser:appuser /app</span></span>
<span class="line"><span class="token instruction"><span class="token keyword">USER</span> appuser</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># ポートを公開</span></span>
<span class="line"><span class="token instruction"><span class="token keyword">EXPOSE</span> 5000</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># アプリケーション起動</span></span>
<span class="line"><span class="token instruction"><span class="token keyword">CMD</span> [<span class="token string">&quot;python&quot;</span>, <span class="token string">&quot;main.py&quot;</span>]</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>5. MySQL初期化スクリプト</strong></p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql"><pre><code><span class="line"><span class="token comment">-- mysql/init.sql</span></span>
<span class="line"><span class="token keyword">USE</span> flask_app<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token keyword">IF</span> <span class="token operator">NOT</span> <span class="token keyword">EXISTS</span> visits <span class="token punctuation">(</span></span>
<span class="line">    id <span class="token keyword">INT</span> <span class="token keyword">AUTO_INCREMENT</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span><span class="token punctuation">,</span></span>
<span class="line">    ip_address <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">45</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token keyword">timestamp</span> <span class="token keyword">DATETIME</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span></span>
<span class="line">    user_agent <span class="token keyword">TEXT</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token keyword">INDEX</span> idx_timestamp <span class="token punctuation">(</span><span class="token keyword">timestamp</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token keyword">INDEX</span> idx_ip <span class="token punctuation">(</span>ip_address<span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- 初期データを挿入（デモ用）</span></span>
<span class="line"><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> visits <span class="token punctuation">(</span>ip_address<span class="token punctuation">,</span> <span class="token keyword">timestamp</span><span class="token punctuation">,</span> user_agent<span class="token punctuation">)</span> <span class="token keyword">VALUES</span> </span>
<span class="line"><span class="token punctuation">(</span><span class="token string">&#39;127.0.0.1&#39;</span><span class="token punctuation">,</span> <span class="token function">NOW</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&#39;Initial Setup Browser&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">(</span><span class="token string">&#39;192.168.1.100&#39;</span><span class="token punctuation">,</span> <span class="token function">NOW</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&#39;Test User Agent&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">(</span><span class="token string">&#39;10.0.0.1&#39;</span><span class="token punctuation">,</span> <span class="token function">NOW</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&#39;Docker Health Check&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>6. ヘルスチェック付きcompose.yml</strong></p><div class="language-yaml line-numbers-mode" data-highlighter="prismjs" data-ext="yml"><pre><code><span class="line"><span class="token comment"># compose.yml</span></span>
<span class="line"><span class="token key atrule">services</span><span class="token punctuation">:</span></span>
<span class="line">  <span class="token key atrule">app</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token key atrule">build</span><span class="token punctuation">:</span> .</span>
<span class="line">    <span class="token key atrule">restart</span><span class="token punctuation">:</span> unless<span class="token punctuation">-</span>stopped</span>
<span class="line">    <span class="token key atrule">ports</span><span class="token punctuation">:</span></span>
<span class="line">      <span class="token punctuation">-</span> <span class="token string">&quot;5000:5000&quot;</span></span>
<span class="line">    <span class="token key atrule">environment</span><span class="token punctuation">:</span></span>
<span class="line">      <span class="token punctuation">-</span> TZ=Asia/Tokyo</span>
<span class="line">      <span class="token punctuation">-</span> DB_HOST=db</span>
<span class="line">      <span class="token punctuation">-</span> DB_NAME=flask_app</span>
<span class="line">      <span class="token punctuation">-</span> DB_USER=flask_user</span>
<span class="line">      <span class="token punctuation">-</span> DB_PASSWORD=flask_password</span>
<span class="line">    <span class="token key atrule">depends_on</span><span class="token punctuation">:</span></span>
<span class="line">      <span class="token key atrule">db</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token key atrule">condition</span><span class="token punctuation">:</span> service_healthy  <span class="token comment"># DBの完全起動を待つ</span></span>
<span class="line">    <span class="token key atrule">networks</span><span class="token punctuation">:</span></span>
<span class="line">      <span class="token punctuation">-</span> app<span class="token punctuation">-</span>network</span>
<span class="line">    <span class="token key atrule">healthcheck</span><span class="token punctuation">:</span></span>
<span class="line">      <span class="token key atrule">test</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">&quot;CMD&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;curl&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;-f&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;http://localhost:5000/health&quot;</span><span class="token punctuation">]</span></span>
<span class="line">      <span class="token key atrule">interval</span><span class="token punctuation">:</span> 30s</span>
<span class="line">      <span class="token key atrule">timeout</span><span class="token punctuation">:</span> 10s</span>
<span class="line">      <span class="token key atrule">retries</span><span class="token punctuation">:</span> <span class="token number">3</span></span>
<span class="line">      <span class="token key atrule">start_period</span><span class="token punctuation">:</span> 40s</span>
<span class="line"></span>
<span class="line">  <span class="token key atrule">db</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token key atrule">image</span><span class="token punctuation">:</span> mysql<span class="token punctuation">:</span>8.0<span class="token punctuation">-</span>bookworm</span>
<span class="line">    <span class="token key atrule">restart</span><span class="token punctuation">:</span> unless<span class="token punctuation">-</span>stopped</span>
<span class="line">    <span class="token key atrule">environment</span><span class="token punctuation">:</span></span>
<span class="line">      <span class="token punctuation">-</span> TZ=Asia/Tokyo</span>
<span class="line">      <span class="token punctuation">-</span> MYSQL_ROOT_PASSWORD=root_password</span>
<span class="line">      <span class="token punctuation">-</span> MYSQL_DATABASE=flask_app</span>
<span class="line">      <span class="token punctuation">-</span> MYSQL_USER=flask_user</span>
<span class="line">      <span class="token punctuation">-</span> MYSQL_PASSWORD=flask_password</span>
<span class="line">    <span class="token key atrule">volumes</span><span class="token punctuation">:</span></span>
<span class="line">      <span class="token punctuation">-</span> mysql_data<span class="token punctuation">:</span>/var/lib/mysql</span>
<span class="line">      <span class="token punctuation">-</span> ./mysql/init.sql<span class="token punctuation">:</span>/docker<span class="token punctuation">-</span>entrypoint<span class="token punctuation">-</span>initdb.d/init.sql<span class="token punctuation">:</span>ro</span>
<span class="line">    <span class="token key atrule">networks</span><span class="token punctuation">:</span></span>
<span class="line">      <span class="token punctuation">-</span> app<span class="token punctuation">-</span>network</span>
<span class="line">    <span class="token key atrule">healthcheck</span><span class="token punctuation">:</span></span>
<span class="line">      <span class="token key atrule">test</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">&quot;CMD&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;mysqladmin&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;ping&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;-h&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;localhost&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;-u&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;flask_user&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;-pflask_password&quot;</span><span class="token punctuation">]</span></span>
<span class="line">      <span class="token key atrule">timeout</span><span class="token punctuation">:</span> 20s</span>
<span class="line">      <span class="token key atrule">retries</span><span class="token punctuation">:</span> <span class="token number">10</span></span>
<span class="line">      <span class="token key atrule">start_period</span><span class="token punctuation">:</span> 30s</span>
<span class="line"></span>
<span class="line"><span class="token key atrule">networks</span><span class="token punctuation">:</span></span>
<span class="line">  <span class="token key atrule">app-network</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token key atrule">driver</span><span class="token punctuation">:</span> bridge</span>
<span class="line"></span>
<span class="line"><span class="token key atrule">volumes</span><span class="token punctuation">:</span></span>
<span class="line">  <span class="token key atrule">mysql_data</span><span class="token punctuation">:</span>  <span class="token comment"># データベースデータの永続化</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="動作確認-1" tabindex="-1"><a class="header-anchor" href="#動作確認-1"><span>✅ 動作確認</span></a></h3><p><strong>1. サービスを起動</strong></p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token comment"># プロジェクトディレクトリで実行</span></span>
<span class="line"><span class="token function">docker</span> compose up <span class="token parameter variable">-d</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 起動状況を確認（ヘルスチェック状態も含む）</span></span>
<span class="line"><span class="token function">docker</span> compose <span class="token function">ps</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>2. アプリケーションの動作確認</strong></p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token comment"># Webブラウザまたはcurlでアクセス</span></span>
<span class="line"><span class="token function">curl</span> http://localhost:5000/</span>
<span class="line"></span>
<span class="line"><span class="token comment"># JSON APIの確認</span></span>
<span class="line"><span class="token function">curl</span> http://localhost:5000/api/visits <span class="token operator">|</span> jq</span>
<span class="line"></span>
<span class="line"><span class="token comment"># ヘルスチェックエンドポイントの確認</span></span>
<span class="line"><span class="token function">curl</span> http://localhost:5000/health</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 複数回アクセスして訪問数の増加を確認</span></span>
<span class="line"><span class="token keyword">for</span> <span class="token for-or-select variable">i</span> <span class="token keyword">in</span> <span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">..</span><span class="token number">5</span><span class="token punctuation">}</span><span class="token punctuation">;</span> <span class="token keyword">do</span> <span class="token function">curl</span> <span class="token parameter variable">-s</span> http://localhost:5000/ <span class="token operator">|</span> <span class="token function">grep</span> visit_count<span class="token punctuation">;</span> <span class="token keyword">done</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>3. データベースの直接確認</strong></p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token comment"># MySQLコンテナに接続</span></span>
<span class="line"><span class="token function">docker</span> compose <span class="token builtin class-name">exec</span> db mysql <span class="token parameter variable">-u</span> flask_user <span class="token parameter variable">-pflask_password</span> flask_app</span>
<span class="line"></span>
<span class="line"><span class="token comment"># SQLで訪問記録を確認</span></span>
<span class="line">SELECT id, ip_address, timestamp FROM visits ORDER BY timestamp DESC LIMIT <span class="token number">10</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># テーブル構造の確認</span></span>
<span class="line">DESCRIBE visits<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 総レコード数の確認</span></span>
<span class="line">SELECT COUNT<span class="token punctuation">(</span>*<span class="token punctuation">)</span> as total_visits FROM visits<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">EXIT<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>4. ヘルスチェックの動作確認</strong></p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token comment"># 各サービスのヘルス状態を確認</span></span>
<span class="line"><span class="token function">docker</span> inspect <span class="token variable"><span class="token variable">$(</span><span class="token function">docker</span> compose <span class="token function">ps</span> <span class="token parameter variable">-q</span> app<span class="token variable">)</span></span> <span class="token operator">|</span> jq <span class="token string">&#39;.[0].State.Health&#39;</span></span>
<span class="line"><span class="token function">docker</span> inspect <span class="token variable"><span class="token variable">$(</span><span class="token function">docker</span> compose <span class="token function">ps</span> <span class="token parameter variable">-q</span> db<span class="token variable">)</span></span> <span class="token operator">|</span> jq <span class="token string">&#39;.[0].State.Health&#39;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>5. データ永続化の確認</strong></p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token comment"># コンテナを停止してデータを確認</span></span>
<span class="line"><span class="token function">docker</span> compose down</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 再度起動してデータが保持されているか確認</span></span>
<span class="line"><span class="token function">docker</span> compose up <span class="token parameter variable">-d</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="重要な学習ポイント" tabindex="-1"><a class="header-anchor" href="#重要な学習ポイント"><span>💡 重要な学習ポイント</span></a></h3><p><strong>1. ヘルスチェックによる起動順序制御</strong></p><ul><li><code>condition: service_healthy</code>でDBが完全に起動してからアプリが起動</li><li>従来の<code>depends_on</code>だけでは不十分な問題を解決</li></ul><p><strong>2. データ永続化の仕組み</strong></p><ul><li><code>mysql_data</code>ボリュームでコンテナを削除してもデータが保持</li><li>初期化スクリプトは初回起動時のみ実行</li></ul><p><strong>3. 環境変数による設定管理</strong></p><ul><li>ハードコードを避けて設定を外部化</li><li>セキュリティと保守性の向上</li></ul><p><strong>4. サービス間通信</strong></p><ul><li>Docker Composeが自動的に内部DNSを提供</li><li><code>app</code>から<code>db:3306</code>でMySQLにアクセス可能</li></ul><h2 id="よくある問題と解決方法" tabindex="-1"><a class="header-anchor" href="#よくある問題と解決方法"><span>よくある問題と解決方法</span></a></h2><h3 id="問題1-データベース接続エラー" tabindex="-1"><a class="header-anchor" href="#問題1-データベース接続エラー"><span>問題1: データベース接続エラー</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token comment"># データベースの状態確認</span></span>
<span class="line"><span class="token function">docker</span> compose logs db</span>
<span class="line"></span>
<span class="line"><span class="token comment"># ネットワーク接続確認</span></span>
<span class="line"><span class="token function">docker</span> compose <span class="token builtin class-name">exec</span> app <span class="token function">ping</span> db</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 環境変数の確認</span></span>
<span class="line"><span class="token function">docker</span> compose <span class="token builtin class-name">exec</span> app <span class="token function">env</span> <span class="token operator">|</span> <span class="token function">grep</span> DB_</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="問題2-ヘルスチェックが失敗する" tabindex="-1"><a class="header-anchor" href="#問題2-ヘルスチェックが失敗する"><span>問題2: ヘルスチェックが失敗する</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token comment"># ヘルスチェックのログ確認</span></span>
<span class="line"><span class="token function">docker</span> inspect <span class="token variable"><span class="token variable">$(</span><span class="token function">docker</span> compose <span class="token function">ps</span> <span class="token parameter variable">-q</span> app<span class="token variable">)</span></span> <span class="token operator">|</span> jq <span class="token string">&#39;.[0].State.Health&#39;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 手動でヘルスチェック実行</span></span>
<span class="line"><span class="token function">docker</span> compose <span class="token builtin class-name">exec</span> app <span class="token function">curl</span> localhost:5000/health</span>
<span class="line"></span>
<span class="line"><span class="token comment"># MySQLのヘルスチェック確認</span></span>
<span class="line"><span class="token function">docker</span> compose <span class="token builtin class-name">exec</span> db mysqladmin <span class="token function">ping</span> <span class="token parameter variable">-h</span> localhost <span class="token parameter variable">-u</span> flask_user <span class="token parameter variable">-pflask_password</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="問題3-テーブルが作成されない" tabindex="-1"><a class="header-anchor" href="#問題3-テーブルが作成されない"><span>問題3: テーブルが作成されない</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token comment"># 初期化スクリプトが実行されたか確認</span></span>
<span class="line"><span class="token function">docker</span> compose logs db <span class="token operator">|</span> <span class="token function">grep</span> init.sql</span>
<span class="line"></span>
<span class="line"><span class="token comment"># テーブルの存在確認</span></span>
<span class="line"><span class="token function">docker</span> compose <span class="token builtin class-name">exec</span> db mysql <span class="token parameter variable">-u</span> flask_user <span class="token parameter variable">-pflask_password</span> <span class="token parameter variable">-e</span> <span class="token string">&quot;SHOW TABLES;&quot;</span> flask_app</span>
<span class="line"></span>
<span class="line"><span class="token comment"># ボリュームを削除して再初期化</span></span>
<span class="line"><span class="token function">docker</span> compose down <span class="token parameter variable">-v</span></span>
<span class="line"><span class="token function">docker</span> compose up <span class="token parameter variable">-d</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="問題4-ポートがすでに使用中" tabindex="-1"><a class="header-anchor" href="#問題4-ポートがすでに使用中"><span>問題4: ポートがすでに使用中</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token comment"># 使用中のポートを確認</span></span>
<span class="line"><span class="token function">netstat</span> <span class="token parameter variable">-tulpn</span> <span class="token operator">|</span> <span class="token function">grep</span> :5000</span>
<span class="line"><span class="token function">netstat</span> <span class="token parameter variable">-tulpn</span> <span class="token operator">|</span> <span class="token function">grep</span> :3306</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 別のポートを使用</span></span>
<span class="line"><span class="token comment"># compose.ymlの ports を変更</span></span>
<span class="line"><span class="token comment"># &quot;5001:5000&quot; や &quot;3307:3306&quot; など</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="問題5-前章のイメージが見つからない" tabindex="-1"><a class="header-anchor" href="#問題5-前章のイメージが見つからない"><span>問題5: 前章のイメージが見つからない</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token comment"># 利用可能なイメージを確認</span></span>
<span class="line"><span class="token function">docker</span> images <span class="token operator">|</span> <span class="token function">grep</span> flask</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 必要に応じてDockerfileでビルド</span></span>
<span class="line"><span class="token comment"># compose.ymlで image を build に変更</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="学習チェックリスト" tabindex="-1"><a class="header-anchor" href="#学習チェックリスト"><span>学習チェックリスト</span></a></h2><ul><li>[ ] ハンズオン1: Flask + NGINX 構成が動作した</li><li>[ ] ハンズオン2: データベース統合でデータが永続化された</li><li>[ ] サービス間通信（name resolution）を確認できた</li><li>[ ] ヘルスチェックで起動順序が制御されることを理解した</li><li>[ ] ボリュームによる永続化を実装できた</li><li>[ ] 環境変数による設定管理ができた</li><li>[ ] APIエンドポイントで JSON データを取得できた</li></ul><h3 id="達成レベル" tabindex="-1"><a class="header-anchor" href="#達成レベル"><span>達成レベル</span></a></h3><ul><li><strong>初級</strong>: ハンズオン1完了（サービス間通信の理解）</li><li><strong>中級</strong>: ハンズオン2完了（データ永続化とヘルスチェック）</li></ul><h3 id="次のステップ" tabindex="-1"><a class="header-anchor" href="#次のステップ"><span>次のステップ</span></a></h3>`,92)),n("ul",null,[n("li",null,[p(e,{to:"/dev/container/03_practical_usage.html"},{default:l(()=>s[3]||(s[3]=[a("第3部: 実践応用編")])),_:1}),s[4]||(s[4]=a(" - より高度な運用技術を学ぼう"))])]),s[7]||(s[7]=n("div",{class:"hint-container tip"},[n("p",{class:"hint-container-title"},"💡 Compose基礎完了！"),n("p",null,"複数コンテナの連携システムを構築できるようになりました。次は3層構成やプロダクション運用の技術を学びましょう！")],-1))])}const y=u(v,[["render",g]]),f=JSON.parse('{"path":"/dev/container/02_compose_basic.html","title":"Docker Compose基礎編 - 複数コンテナの連携を学ぼう","lang":"ja-JP","frontmatter":{"footer":"MIT Licensed","title":"Docker Compose基礎編 - 複数コンテナの連携を学ぼう","description":"Docker Composeを使って複数のサービスを連携させ、実用的な開発環境を構築します"},"git":{"updatedTime":1748156338000,"contributors":[{"name":"YUKI_ISHITSUKA","username":"","email":"goegoe0212@outlook.jp","commits":3}],"changelog":[{"hash":"71225d6543b4c6aaa362561a14b029cb7446772e","time":1748156338000,"email":"goegoe0212@outlook.jp","author":"YUKI_ISHITSUKA","message":"fix: ハンズオン2を記載"},{"hash":"afdbbd18216e6ed2955a6281cb6424f36173ef0b","time":1748154121000,"email":"goegoe0212@outlook.jp","author":"YUKI_ISHITSUKA","message":"feat: ハンズオン1を記載"},{"hash":"abca198e8b78e520351193d9e506b7bd5137155a","time":1748096932000,"email":"goegoe0212@outlook.jp","author":"YUKI_ISHITSUKA","message":"feat: Docker Compose基礎編の初期コンテンツを追加"}]},"filePathRelative":"dev/container/02_compose_basic.md"}');export{y as comp,f as data};
